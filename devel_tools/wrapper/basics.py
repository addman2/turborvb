import csnake as cs

def add_notice(cw):
    cw.start_comment()
    cw.add("""
           This wrapper is generated by make_wrapper.py script

           Do not change
           """)
    cw.end_comment()

def add_complex(cw):
    compl = cs.Struct("complex", typedef = False)
    compl.add_variable(cs.Variable("re", "double"))
    compl.add_variable(cs.Variable("im", "double"))
    cw.add_struct(compl)

def add_cudasync(cw):
    fun = cs.Function("cudasync_", "void")
    fun.add_code("cudaDeviceSynchronize();")
    cw.add_function_definition(fun)

def add_cusolver_handle_init(cw):
    fun = cs.Function("cusolver_handle_init_",
                      "void",
                      arguments = [ cs.Variable("handle",
                                                "long int *")])
    fun.add_code(("cusolverDnHandle_t *h;",
                  "h = (cusolverDnHandle_t*) malloc(sizeof(cusolverDnHandle_t));",
                  "cusolverDnCreate(h);",
                  "*handle = (long int) h;",
                 ))
    cw.add_function_definition(fun)

def add_cusolver_handle_destroy(cw):
    fun = cs.Function("cusolver_handle_destroy_",
                      "void",
                      arguments = [ cs.Variable("handle",
                                                "long int *")])
    fun.add_code(("cusolverDnHandle_t *h = (cusolverDnHandle_t *) *handle;",
                  "cusolverDnDestroy(*h);",
                  "free(h);",
                 ))
    cw.add_function_definition(fun)

def default_includes(cw):
    cw.include("<stdlib.h>")
    cw.include("<stddef.h>")
    cw.include("<ctype.h>")
